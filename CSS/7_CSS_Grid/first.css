/*

To use grid we need to set the display as grid in the parent.

All direct children automatically become grid icons.

We can use grid-column-gap and grid-row-gap to set the gap between rows and columns.



grid-gap : shorthand property for both grid-column-gap and grid-row-gap.

Container which has display:grid is called grid-container and items inside it are called grid-items.

grid-container has the following properties : 

1) grid-template-columns : used to set the number of columns and the width of each column.

2) grid-template-rows : used to set the number of rows and the width of each rows.

3) justify-content : used to align the whole grid inside the container.

grid-items have the following properties : 

1) grid-column : defines how many columns an item will span.

2) grid-row : defines how many rows an item will span.

Its better to use flex-box rather than grid.

*/

*{
    margin: 0;
    padding: 0;
}
.container{
    height: 100vh;
    display: grid;
    background-color: yellow;
    /* 
    grid-column-gap: 9px;
    grid-row-gap: 9px; 

    The above cmd is equivalent to the below cmd.
    */
    grid-gap: 9px 9px;
    /* 
    The below cmd will set the width of column 1 to 20vh and width of column 2 to 20vh

    grid-template-columns: 20vh 20vh;
    grid-template-rows: 10vw 10vw; */
    
    grid-template-columns: auto auto auto auto;
    grid-template-rows: auto auto auto auto;
    /*
    The below property will align the whole content along the main axis.

    center : in the center
    space-arround : give some space between the elements but still not touch the border.
    space-between : give space between elements and touch the borders of the container

    justify-content: center;
    align-content: center;
    */
}
.item{
    background-color: aqua;
    border:2px solid red;
}
#item1{

    /*
    This will make the grid column start at 1 and end at 3 instead of ending at 2.
    */

    grid-column: 1/3;  

    /* grid-row: 1/3; */

    /* The below cmd tells it to start at 1 span rows of 3 items */

    grid-row: 1/ span 3;
}